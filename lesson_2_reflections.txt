What happens when you initialize a repository? Why do you need to do it?

    A hidden directory is created (.git), which will hold all the metadata about
    the project. It is needed if I want to use git's features.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    These 3 are have completely different goals. The working directory is the one
    you use while working on the project. The staging area serves as an intermediate
    phase where you can choose which files you want to commit to the repository.

How can you use the staging area to make sure you have one commit per logical change?

    I would only add the files to the staging area after implementing that change. That
    way, I would guarantee the same thing in the commits.

What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

    They would be extremely helpful when I want to diverge from the main version of
    the project, be it because I want an alternate version, or simply to try new stuff
    out. This preserves the original version. It also gives a nice visualization of the
    history of the project, and that helps a lot!

How do the diagrams help you visualize the branch structure?

    Well, duh!

What is the result of merging two branches together? Why do we represent it
in the diagram the way we do?

    It means that all the changes introduced in both branches will merged.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

    Answer later.
